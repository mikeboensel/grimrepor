services:
  backend_processor:
    image: backend_processor
    container_name: backend_processor
    build:
      dockerfile: ./.devcontainer/backend_processor/Dockerfile
    env_file:
      - .env
    environment:
      - USING_DOCKER=true
    volumes:
      - ./scripts/:/app/ # Bring in our code + allow changes to persist back


  tweet_bot:
    image: tweet_bot
    container_name: tweet_bot
    build:
      dockerfile: ./.devcontainer/tweet_bot/Dockerfile
    env_file:
      - .env
    environment:
      - USING_DOCKER=true
    volumes:
      - ./tweet_bot/:/app/ # Bring in our code + allow changes to persist back
      - ./utils/:/app/utils/
      - ./database:/app/database/



  db:
    image: mysql:8.0.40-debian
    container_name: mysql_container
    env_file:
      - .env
    environment:
      - USING_DOCKER=true
    volumes:
      - ./db/mysql-init/:/docker-entrypoint-initdb.d/ # Defines our Table structures
      - ./db/my.cnf:/etc/mysql/conf.d/my.cnf #Optional setup
      - mysql_data:/var/lib/mysql # Persists our data
    ports:
      - "3306:3306" #MYSQL
      - "33060:33060" #MYSQL X protocol


  website:
    image: website
    container_name: website
    build:
      dockerfile: ./.devcontainer/website/Dockerfile
    environment:
      - USING_DOCKER=true
    # volumes:
    #   - ./website/:/app/ # Bring in our code + allow changes to persist back
    ports:
      - "3003:3000" #Rebind to avoid collisions


volumes:
  mysql_data: